using System.Xml;
using System.Text.RegularExpressions;



public class XacroConverter
{
    private readonly string inputFilePath;
    private readonly string outputFilePath;
    private readonly XmlDocument doc = new();

    public XacroConverter(string inputFilePath, string outputFilePath)
    {
        this.inputFilePath = inputFilePath;
        this.outputFilePath = outputFilePath;
    }

    public void Convert()
    {
        doc.Load(inputFilePath);
        var robot = new XacroMacroContext(doc.DocumentElement, Path.GetDirectoryName(Path.GetDirectoryName(inputFilePath)), [], [], []);
        robot.ExpandMacros();
        // var outputDoc = new XmlDocument();
        // var robotNode = outputDoc.CreateElement("robot");
        // outputDoc.AppendChild(robotNode);
        // robotNode.SetAttribute("name", robot.Name);

        RemoveXacroElements(doc.DocumentElement);
        RemoveXacroElements(doc.DocumentElement);

        doc.Save(outputFilePath);
    }

    private void RemoveXacroElements(XmlElement onNode)
    {
        XmlNodeList? xacroNodes = onNode.SelectNodes("//*[starts-with(name(), 'xacro:')]");
        if (xacroNodes == null) return;
        
        foreach (XmlNode xacroNode in xacroNodes)
        {
            xacroNode.ParentNode?.RemoveChild(xacroNode);
        }
    }

    private void AddBanner()
    {
        string[] bannerLines = {
            " =================================================================================== ",
            $" |    This document was autogenerated by xacro from {Path.GetFileName(inputFilePath)}",
            " |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                   ",
            " =================================================================================== "
        };

        foreach (string line in bannerLines.Reverse())
        {
            XmlComment comment = doc.CreateComment(line);
            doc.DocumentElement.PrependChild(comment);
        }
    }
}